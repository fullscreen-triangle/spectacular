:root {
  --light-grey: #f8f9fa;
  --medium-grey: #e5e5e5;
  --dark-grey: #c8c8c8;
  --python-gallery: #cb1dd1;
  --light-black: #484848;
  --enable-smooth-scroll: false;
}

/* Fix a bug where going to a new URL triggers a scroll animation to the top of the page https://github.com/holtzy/The-Python-Graph-Gallery/issues/108 */
html {
  scroll-behavior: auto !important; /* Override smooth scrolling */
}

/* Each section has a specific color */
.distribution {
  color: #e0ac2b;
}
.correlation {
  color: #7f7f7f;
}
.ranking {
  color: #a4c969;
}
.partOfAWhole {
  color: #e85252;
}
.evolution {
  color: #6689c6;
}
.map {
  color: #9a6fb0;
}
.flow {
  color: #a53253;
}

/*
FONT from https://gwfh.mranftl.com/fonts/bitter?subsets=latin
gatsby tutorial: https://www.gatsbyjs.com/docs/how-to/styling/using-local-fonts/
*/
/* roboto-regular - latin */
@font-face {
  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: url(/fonts/roboto-v30-latin/roboto-v30-latin-regular.woff2)
    format('woff2');
}
/* roboto-italic - latin */
@font-face {
  font-display: swap;
  font-family: 'Roboto';
  font-style: italic;
  font-weight: 400;
  src: url(/fonts/roboto-v30-latin/roboto-v30-latin-italic.woff2)
    format('woff2');
}
/* roboto-700 - latin */
@font-face {
  font-display: swap;
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  src: url(/fonts/roboto-v30-latin/roboto-v30-latin-700.woff2) format('woff2');
}
/* bitter-regular - latin */
@font-face {
  font-display: swap;
  font-family: 'Bitter';
  font-style: normal;
  font-weight: 400;
  src: url(/fonts/bitter-v33-latin/bitter-v33-latin-regular.woff2)
    format('woff2');
}
/* bitter-italic - latin */
@font-face {
  font-display: swap;
  font-family: 'Bitter';
  font-style: italic;
  font-weight: 400;
  src: url(/fonts/bitter-v33-latin/bitter-v33-latin-italic.woff2)
    format('woff2');
}
/* bitter-700 - latin */
@font-face {
  font-display: swap;
  font-family: 'Bitter';
  font-style: normal;
  font-weight: 700;
  src: url(/fonts/bitter-v33-latin/bitter-v33-latin-700.woff2) format('woff2');
}

/* ---------- Global CSS ----------------- */
body {
  overflow-x: hidden;
  font-weight: 400;
  font-family: 'Roboto', sans-serif;
  font-size: 19px;
  line-height: 30px;
  color: #333;
}

p {
  margin-bottom: 10px;
}

/* I use the Container component of the react-bootstrap library. */
/* But on wide screen I feel like the website is too wide. This restricts it a bit. */
.container {
  max-width: 822px;
}

a {
  color: var(--python-gallery);
  text-decoration: underline;
  text-underline-offset: 3px;
  text-decoration-thickness: 0.1px;
}
a:hover {
  color: #251667;
}

code {
  background-color: var(--light-grey);
  padding: 4px;
  border-radius: 4px;
}

/* ---------- Titles ----------------- */
h1 {
  font-size: 42px;
  line-height: 54px;
  font-family: 'Bitter', sans-serif;
  font-weight: bold;
  letter-spacing: 0.03em;
}

h2 {
  font-size: 32px;
  line-height: 44px;
  font-family: 'Bitter', sans-serif;
  font-weight: bold;
  letter-spacing: 0.03em;
  width: 100%;
  border-bottom: 1px solid var(--medium-grey);
  margin-top: 60px;
  margin-bottom: 10px;
  padding-bottom: 10px;
  /* scroll margin allows to add a bit of space around the title we're targeting with the table of content */
  scroll-margin: 100px;
}

h3 {
  font-family: 'Bitter', sans-serif;
  font-weight: bold;
  line-height: 34px;
  letter-spacing: 0.03em;
  font-size: 22px;
  width: 100%;
  margin-top: 40px;
  padding-bottom: 10px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  /* scroll margin allows to add a bit of space around the title we're targeting with the table of content */
  scroll-margin: 100px;
}

/* ---------- Section ----------------- */
.lightSection {
  padding-top: 2px;
  padding-bottom: 10px;
}

.greySection {
  background-color: var(--light-grey);
  padding-top: 2px;
  padding-bottom: 10px;
}

/* ---------- BlockQuote ----------------- */
blockquote {
  background: var(--light-grey);
  border-left: 2px solid var(--python-gallery);
  margin: 10px 50px;
  padding: 0.5em 10px;
  quotes: '\201C''\201D''\2018''\2019';
}
blockquote p {
  display: inline;
}

/* ---------- How code looks like in notebooks ----------------- */
pre.input {
  line-height: 1.25em !important;
  margin-bottom: 20px !important;
  margin-top: 0px;
}
pre code {
  padding: 0px;
}
.nteract-display-area-stderr {
  display: none;
}
.cell_display img {
  margin-bottom: 30px;
}

/* ---------- Button ----------------- */
.btn {
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  border-color: var(--python-gallery);
  color: var(--python-gallery);
  border-width: 2px;
  background-color: transparent;
  margin: 3px;
}

.btn-xl {
  font-size: 18px;
  padding: 20px 40px;
}

.btn:active,
.btn:focus,
.btn:hover {
  background-color: var(--python-gallery);
  border-color: var(--python-gallery);
  color: white;
}

.isButtonSelected {
  background-color: var(--python-gallery);
  border-color: var(--python-gallery);
  color: white;
}

/* ---------- IMG in markdown cells ----------------- */
/* There is a bug when I transform the jupyter notebooks to html:
If I insert some html in the notebook, it is basically removed.
As a result, it is impossible to size images properly using the <img> tag.
With this code, I make sure the img never goes above the container content area */
.markdown img {
  max-width: 90%;
}
